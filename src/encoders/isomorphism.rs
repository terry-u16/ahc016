use self::{
    annealing::{binarygraph::BinaryGraph, state::State},
    checker::{try_generate_isompic_graphs, IsomophicChecker, Vf2Checker},
};
use super::Encoder;
use crate::{
    encoders::isomorphism::annealing::annealer::Annealer,
    graph::Graph,
    utils::{decode_num_to_u64, ChangeMinMax},
};
use rand_pcg::Pcg64Mcg;

mod annealing;
mod checker;

#[derive(Debug, Clone)]
pub struct IsomorphismEncoder {
    graphs: Vec<Graph>,
    /// 送信するグラフの種類数
    graph_count: usize,
    /// グラフの大きさ
    graph_size: usize,
    /// 冗長性考慮前のグラフの大きさ
    original_graph_size: usize,
    /// 冗長性
    redundancy: usize,
    /// 焼きなましスコアのグループ内:グループ外の重みの比
    score_coef: f64,
}

impl IsomorphismEncoder {
    pub fn new(
        graph_count: usize,
        error_ratio: f64,
        bits: Option<usize>,
        redundancy: Option<usize>,
        score_coef: Option<f64>,
    ) -> Self {
        let (auto_bits, auto_redundancy, auto_score_coef) =
            Self::get_storategy(graph_count, error_ratio);

        let (mut graphs, original_graph_size) = if let Some(bits) = bits {
            (
                try_generate_isompic_graphs(graph_count, error_ratio, bits).unwrap(),
                bits,
            )
        } else {
            (
                try_generate_isompic_graphs(graph_count, error_ratio, auto_bits).unwrap(),
                auto_bits,
            )
        };

        graphs.truncate(graph_count);
        let redundancy = redundancy.unwrap_or(auto_redundancy);
        let score_coef = score_coef.unwrap_or(auto_score_coef);
        let graph_size = original_graph_size * redundancy;

        Self {
            graphs,
            graph_count,
            graph_size,
            original_graph_size,
            redundancy,
            score_coef,
        }
    }

    fn get_storategy(m: usize, error_ratio: f64) -> (usize, usize, f64) {
        let error_ratio = (error_ratio * 100.0 + 0.1) as usize;
        let storategy_matrix = get_storategy_matrix();
        storategy_matrix[m - 10][error_ratio]
    }

    fn restore(
        &self,
        graph: &BinaryGraph,
        annealer: &Annealer,
        duration: f64,
        rng: &mut Pcg64Mcg,
    ) -> Option<usize> {
        let state = State::init_rand(&graph, self.original_graph_size, self.score_coef, rng);
        let state = annealer.annealing(&graph, state, duration);
        let graph = state.restore_graph();
        let checker = Vf2Checker::new(&graph);

        for (i, g) in self.graphs.iter().enumerate() {
            if checker.is_isomorphic(g) {
                return Some(i);
            }
        }

        eprintln!("failed to decode.");
        None
    }
}

impl Encoder for IsomorphismEncoder {
    fn graph_size(&self) -> usize {
        self.graph_size
    }

    fn encode(&self, index: usize) -> Graph {
        let original_graph = &self.graphs[index];

        let mut graph = Graph::new(self.graph_size);
        // クリーク内
        for i in 0..original_graph.n {
            for x in 0..self.redundancy {
                for y in (x + 1)..self.redundancy {
                    let u = i * self.redundancy + x;
                    let v = i * self.redundancy + y;
                    graph.connect(u, v);
                }
            }
        }

        // クリーク間
        for i in 0..original_graph.n {
            for j in (i + 1)..original_graph.n {
                for x in 0..self.redundancy {
                    for y in 0..self.redundancy {
                        let u = i * self.redundancy + x;
                        let v = j * self.redundancy + y;
                        if original_graph[i][j] {
                            graph.connect(u, v);
                        }
                    }
                }
            }
        }

        graph
    }

    fn decode(&self, graph: &Graph, duration: f64) -> usize {
        let mut rng = Pcg64Mcg::new(42);
        let graph = BinaryGraph::new(graph);
        let annealer = Annealer::new(false);
        let mut votes = vec![0; self.graph_count];

        const TRIAL_COUNT: usize = 5;
        let each_duration = duration / TRIAL_COUNT as f64;

        // 多数決を取る
        for _ in 0..TRIAL_COUNT {
            if let Some(i) = self.restore(&graph, &annealer, each_duration, &mut rng) {
                votes[i] += 1;
            }
        }

        let mut max_votes = 0;
        let mut max_index = 0;

        for (i, &c) in votes.iter().enumerate() {
            if max_votes.change_max(c) {
                max_index = i;
            }
        }

        max_index
    }
}

fn get_storategy_matrix() -> Vec<Vec<(usize, usize, f64)>> {
    const DEC_DATA: &[u8] = b

    let mut matrix = vec![];
    let mut cursor = 0;

    for _m in 10..=100 {
        let mut line = vec![];
        for _eps in 0..=40 {
            let bits = decode_num_to_u64(&DEC_DATA[cursor..(cursor + 1)]) as usize;
            cursor += 1;
            let redundancy = decode_num_to_u64(&DEC_DATA[cursor..(cursor + 2)]) as usize;
            cursor += 2;
            let score_coef = decode_num_to_u64(&DEC_DATA[cursor..(cursor + 2)]) as f64 * 0.1;
            cursor += 2;
            line.push((bits, redundancy, score_coef));
        }
        matrix.push(line)
    }

    matrix
}
